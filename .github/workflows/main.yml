name: dummy oxid module pipeline

on: [push]

jobs:
  install:
    runs-on: ubuntu-latest
    container:
      image: composer:1.10.17
      # volumes:
      #   - ${{ github.workspace }}/oxid:/project
      # options: "--workdir /project"
    env:
      DB_HOST: "db"
    # services:
    #   db:
    #     image: mysql:5.7
    #     env:
    #       MYSQL_ROOT_PASSWORD: root
    #       MYSQL_DATABASE: oxid
    #     ports:
    #       - 3306
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v1

    - name: install
      run: composer create-project mprokopov/test-oxid-docker /__w/oxid --no-interaction -s dev --repository="{\"url\":\"https://github.com/mprokopov/test-oxid-docker.git\", \"type\":\"vcs\"}" --remove-vcs

    - name: add project module folder
      run: |
        mkdir -p project-modules && cp /__w/oxid-dummy-module-pipeline/oxid-dummy-module-pipeline/* project-modules 
        composer config repositories.build path /__w/oxid/project-modules/\*
      working-directory: /__w/oxid

    - name: require module
      run: cd /__w/oxid && composer require --no-interaction oxid-professional-services/dummy
      working-directory: /__w/oxid

    - name: zip temp artifact
      run: |
        tar czf oxid.tar.gz --directory /__w oxid 

    - name: Upload oxid-with-deps
      uses: actions/upload-artifact@v2
      with:
        name: oxid-with-deps
        path: oxid.tar.gz

  build:
    runs-on: ubuntu-latest
    needs: install
    container:
      image: oxidesales/oxideshop-docker-php:7.4
      # volumes:
      #   - ${{ github.workspace }}/oxid:/project
      #   - ${{ github.workspace }}/dummy-module:/project/project-modules/dummy-module
    steps:
    - uses: actions/checkout@v1
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
        name: oxid-with-deps
    - name: extract temp artifact
      run: |
        tar xzf oxid.tar.gz && mv oxid /__w
    - name: prepare autoload
      run: |
        bin/symlinkProjectModules.sh
        bin/createModuleAutoload.sh
        cp config.inc.php-dist source/config.inc.php
      working-directory: /__w/oxid

    - name: run unit tests
      run: vendor/bin/phpunit --testsuite unit-tests
      working-directory: /__w/oxid

    # - name: add project module folder
    #   run: composer config repositories.build path /__w/oxid-dummy-module-pipeline/oxid-dummy-module-pipeline/\*
    #   working-directory: /__w/oxid

    # - name: require module
    #   run: cd /__w/oxid && composer require --no-interaction oxid-professional-services/dummy
    #   working-directory: /__w/oxid
